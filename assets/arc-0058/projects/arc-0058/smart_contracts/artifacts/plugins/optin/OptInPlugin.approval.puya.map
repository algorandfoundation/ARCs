{
  "version": 3,
  "sources": [
    "/Users/kylebreeding/algorand/ARCs/assets/arc-0058/projects/arc-0058/smart_contracts/abstracted_account/constants.ts",
    "/Users/kylebreeding/algorand/ARCs/assets/arc-0058/projects/arc-0058/smart_contracts/plugins/optin/contract.algo.ts",
    "/Users/kylebreeding/algorand/ARCs/assets/arc-0058/projects/arc-0058/smart_contracts/utils/constants.ts",
    "/Users/kylebreeding/algorand/ARCs/assets/arc-0058/projects/arc-0058/smart_contracts/utils/plugins.ts"
  ],
  "mappings": ";;;;;ACMA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AAEE;;AAAA;AAAA;AAAA;;AAAA;AAFF;;;AAAA;AAAA;;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEE;;;AAAA;;AAFF;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAEE;;;;;;AEyB+B;;AH5B4B;;;;;;;;;;;;;;;;;;AG4B5B;AAAA;AAAA;AFrB7B;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAImB;;AAA8B;;AAAA;AAAA;AAArC;AAJZ;AAAA;;;;AAAA;AASqB;AAAZ;;AAA0B;;AAAA;AAAA;AAAX;;AAAA;AAAxB;;;AACiC;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAvB;;AAAA;AAAA;;AAAA;;AAAD;AAAP;AAEA;AEiBA;;AAAA;;;AACY;;;;;;;;AFdK;;;;;;;;;;AAJjB;;;;ACtBqB;;;ADsBrB;AAHyC;;AAAA;AAAA;AAAA;;;;;AEwB/B;;AAAA;;AAAA;AFfG;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "10": {
      "op": "pushbytes 0x27ece5e6 // method \"optInToAsset(uint64,bool,uint64[],pay)void\"",
      "defined_out": [
        "Method(optInToAsset(uint64,bool,uint64[],pay)void)"
      ],
      "stack_out": [
        "Method(optInToAsset(uint64,bool,uint64[],pay)void)"
      ]
    },
    "16": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(optInToAsset(uint64,bool,uint64[],pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(optInToAsset(uint64,bool,uint64[],pay)void)",
        "tmp%2#0"
      ]
    },
    "19": {
      "op": "match main_optInToAsset_route@3",
      "stack_out": []
    },
    "23": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "return",
      "stack_out": []
    },
    "25": {
      "block": "main_optInToAsset_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "27": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "29": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "31": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "32": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "35": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "36": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "39": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[1]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[1]%0#0",
        "0"
      ]
    },
    "40": {
      "op": "getbit",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "41": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0"
      ]
    },
    "44": {
      "op": "txn GroupIndex",
      "defined_out": [
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%9#0"
      ]
    },
    "46": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%9#0",
        "1"
      ]
    },
    "47": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "gtxn_idx%0#0"
      ]
    },
    "48": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "49": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "51": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "52": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "reinterpret_encoded_uint64[]%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "53": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_encoded_uint64[]%0#0",
        "gtxn_idx%0#0"
      ]
    },
    "54": {
      "callsub": "smart_contracts/plugins/optin/contract.algo.ts::OptInPlugin.optInToAsset",
      "op": "callsub optInToAsset",
      "stack_out": []
    },
    "57": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "58": {
      "op": "return",
      "stack_out": []
    },
    "59": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "61": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "64": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "66": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "67": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "68": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "69": {
      "op": "return",
      "stack_out": []
    },
    "70": {
      "subroutine": "smart_contracts/plugins/optin/contract.algo.ts::OptInPlugin.optInToAsset",
      "params": {
        "walletID#0": "uint64",
        "rekeyBack#0": "uint64",
        "assets#0": "bytes",
        "mbrPayment#0": "uint64"
      },
      "block": "optInToAsset",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "73": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "75": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "tmp%9#0"
      ]
    },
    "76": {
      "op": "frame_dig -4",
      "defined_out": [
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "walletID#0 (copy)"
      ]
    },
    "78": {
      "op": "pushbytes \"spending_address\"",
      "defined_out": [
        "\"spending_address\"",
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "walletID#0 (copy)",
        "\"spending_address\""
      ]
    },
    "96": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_#0",
        "spendingAddressBytes#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "_#0"
      ]
    },
    "97": {
      "op": "pop",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "98": {
      "op": "dup",
      "defined_out": [
        "spendingAddressBytes#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0"
      ]
    },
    "99": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrPayment#0 (copy)",
        "spendingAddressBytes#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0",
        "mbrPayment#0 (copy)"
      ]
    },
    "101": {
      "op": "gtxns Receiver",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0",
        "tmp%0#0"
      ]
    },
    "103": {
      "op": "==",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%1#0"
      ]
    },
    "104": {
      "op": "bz optInToAsset_bool_false@3",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "107": {
      "op": "frame_dig -1",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "mbrPayment#0 (copy)"
      ]
    },
    "109": {
      "op": "gtxns Amount",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%2#0"
      ]
    },
    "111": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "113": {
      "op": "frame_dig -2",
      "defined_out": [
        "assets#0 (copy)",
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%3#0",
        "assets#0 (copy)"
      ]
    },
    "115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%3#0",
        "assets#0 (copy)",
        "0"
      ]
    },
    "116": {
      "op": "extract_uint16",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "117": {
      "op": "*",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "118": {
      "op": "==",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%6#0"
      ]
    },
    "119": {
      "op": "bz optInToAsset_bool_false@3",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "122": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "spendingAddressBytes#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "and_result%0#0"
      ]
    },
    "123": {
      "block": "optInToAsset_bool_merge@4",
      "stack_in": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "and_result%0#0"
      ],
      "error": "invalid payment",
      "op": "assert // invalid payment",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "124": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "i#0"
      ]
    },
    "125": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "127": {
      "block": "optInToAsset_while_top@5",
      "stack_in": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "assets#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "assets#0 (copy)"
      ]
    },
    "129": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "assets#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "assets#0 (copy)",
        "0"
      ]
    },
    "130": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%7#0"
      ]
    },
    "131": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%7#0",
        "i#0"
      ]
    },
    "133": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%8#0"
      ]
    },
    "134": {
      "op": "bz optInToAsset_after_while@8",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "137": {
      "op": "frame_dig -2",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "assets#0 (copy)"
      ]
    },
    "139": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "array_head_and_tail%0#0"
      ]
    },
    "142": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "144": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "array_head_and_tail%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "array_head_and_tail%0#0",
        "i#0",
        "8"
      ]
    },
    "146": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "147": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ]
    },
    "148": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%9#0",
        "tmp%9#0"
      ]
    },
    "149": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ]
    },
    "151": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "153": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ]
    },
    "154": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "i#0",
        "spendingAddressBytes#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "156": {
      "op": "bury 1",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%11#0"
      ]
    },
    "158": {
      "op": "!",
      "defined_out": [
        "i#0",
        "spendingAddressBytes#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%12#0"
      ]
    },
    "159": {
      "error": "already opted in",
      "op": "assert // already opted in",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "160": {
      "op": "itxn_begin"
    },
    "161": {
      "op": "frame_dig -3",
      "defined_out": [
        "i#0",
        "rekeyBack#0 (copy)",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "rekeyBack#0 (copy)"
      ]
    },
    "163": {
      "op": "bnz optInToAsset_after_if_else@11",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "166": {
      "op": "global ZeroAddress",
      "defined_out": [
        "i#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "168": {
      "block": "optInToAsset_after_inlined_smart_contracts/utils/plugins.ts::rekeyAddress@12",
      "stack_in": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ],
      "op": "itxn_field RekeyTo",
      "defined_out": [],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "170": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ]
    },
    "172": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "174": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "0"
      ]
    },
    "175": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "177": {
      "op": "frame_dig 2",
      "defined_out": [
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0"
      ]
    },
    "179": {
      "op": "dup",
      "defined_out": [
        "spendingAddressBytes#0",
        "spendingAddressBytes#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0 (copy)"
      ]
    },
    "180": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "spendingAddressBytes#0"
      ]
    },
    "182": {
      "op": "itxn_field Sender",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "184": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "4"
      ]
    },
    "186": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "188": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "0"
      ]
    },
    "189": {
      "op": "itxn_field Fee",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "191": {
      "op": "itxn_submit"
    },
    "192": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "i#0"
      ]
    },
    "194": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "i#0",
        "1"
      ]
    },
    "195": {
      "op": "+",
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "i#0"
      ]
    },
    "196": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "spendingAddressBytes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ]
    },
    "198": {
      "op": "b optInToAsset_while_top@5"
    },
    "201": {
      "block": "optInToAsset_after_if_else@11",
      "stack_in": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "walletID#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "walletID#0 (copy)"
      ]
    },
    "203": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "205": {
      "error": "application exists",
      "op": "assert // application exists",
      "defined_out": [
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "inner_txn_params%0%%param_RekeyTo_idx_0#0"
      ]
    },
    "206": {
      "op": "b optInToAsset_after_inlined_smart_contracts/utils/plugins.ts::rekeyAddress@12"
    },
    "209": {
      "block": "optInToAsset_after_while@8",
      "stack_in": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "210": {
      "block": "optInToAsset_bool_false@3",
      "stack_in": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%9#0",
        "spendingAddressBytes#0",
        "and_result%0#0"
      ]
    },
    "211": {
      "op": "b optInToAsset_bool_merge@4"
    }
  }
}