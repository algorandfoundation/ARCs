{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 180,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "25: int 0",
              "26: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 19 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "126: int 1",
              "127: b set_asset_bool_merge@4"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 8 -> 17 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 10 -> 22 -> 24 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "207: set_not_circulating_address_switch_case_0@1:",
              "210: byte \"burned\"",
              "211: frame_dig -2",
              "212: app_global_put",
              "213: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 10 -> 22 -> 25 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "215: set_not_circulating_address_switch_case_1@2:",
              "218: byte \"locked\"",
              "219: frame_dig -2",
              "220: app_global_put",
              "221: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 10 -> 22 -> 26 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "223: set_not_circulating_address_switch_case_2@3:",
              "226: byte \"generic\"",
              "227: frame_dig -2",
              "228: app_global_put"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 14 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "93: txn ApplicationID",
              "94: !",
              "95: assert",
              "96: int 1",
              "97: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 14 -> 16 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "99: __puya_arc4_router___after_if_else@11:",
              "102: int 0",
              "103: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "25: int 0",
              "26: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 19 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "126: int 1",
              "127: b set_asset_bool_merge@4"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 17 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 22 -> 24 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "207: set_not_circulating_address_switch_case_0@1:",
              "210: byte \"burned\"",
              "211: frame_dig -2",
              "212: app_global_put",
              "213: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 22 -> 25 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "215: set_not_circulating_address_switch_case_1@2:",
              "218: byte \"locked\"",
              "219: frame_dig -2",
              "220: app_global_put",
              "221: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 22 -> 26 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "223: set_not_circulating_address_switch_case_2@3:",
              "226: byte \"generic\"",
              "227: frame_dig -2",
              "228: app_global_put"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 14 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "93: txn ApplicationID",
              "94: !",
              "95: assert",
              "96: int 1",
              "97: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 14 -> 16 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "99: __puya_arc4_router___after_if_else@11:",
              "102: int 0",
              "103: retsub"
            ],
            [
              "10: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 180,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "25: int 0",
              "26: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 19 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "126: int 1",
              "127: b set_asset_bool_merge@4"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 8 -> 17 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 10 -> 22 -> 24 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "207: set_not_circulating_address_switch_case_0@1:",
              "210: byte \"burned\"",
              "211: frame_dig -2",
              "212: app_global_put",
              "213: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 10 -> 22 -> 25 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "215: set_not_circulating_address_switch_case_1@2:",
              "218: byte \"locked\"",
              "219: frame_dig -2",
              "220: app_global_put",
              "221: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 10 -> 22 -> 26 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "223: set_not_circulating_address_switch_case_2@3:",
              "226: byte \"generic\"",
              "227: frame_dig -2",
              "228: app_global_put"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 14 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "93: txn ApplicationID",
              "94: !",
              "95: assert",
              "96: int 1",
              "97: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 45 -> 3 -> 5 -> 14 -> 16 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "475: __init__:",
              "478: proto 0 0",
              "482: byte \"asset_id\"",
              "483: int 0",
              "484: app_global_put",
              "487: byte \"burned\"",
              "488: global ZeroAddress",
              "493: app_global_put",
              "496: byte \"locked\"",
              "497: global ZeroAddress",
              "502: app_global_put",
              "505: byte \"generic\"",
              "506: global ZeroAddress",
              "511: app_global_put",
              "512: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "99: __puya_arc4_router___after_if_else@11:",
              "102: int 0",
              "103: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 7 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "25: int 0",
              "26: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 19 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "126: int 1",
              "127: b set_asset_bool_merge@4"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 17 -> 18 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "121: int 0",
              "122: byte \"asset_id\"",
              "123: app_global_get_ex",
              "124: assert",
              "125: bnz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 8 -> 17 -> 20 -> 21 -> 9 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "28: __puya_arc4_router___set_asset_route@2:",
              "31: txn OnCompletion",
              "32: !",
              "33: assert",
              "34: txn ApplicationID",
              "35: assert",
              "38: txna ApplicationArgs 1",
              "39: btoi",
              "42: callsub set_asset"
            ],
            [
              "107: set_asset:",
              "111: proto 1 0",
              "115: txn Sender",
              "116: frame_dig -1",
              "117: asset_params_get AssetManager",
              "118: assert",
              "119: ==",
              "120: bz set_asset_bool_false@3"
            ],
            [
              "129: set_asset_bool_false@3:",
              "130: int 0"
            ],
            [
              "132: set_asset_bool_merge@4:",
              "136: assert",
              "140: byte \"asset_id\"",
              "141: frame_dig -1",
              "142: app_global_put",
              "143: retsub"
            ],
            [
              "43: int 1",
              "44: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 22 -> 24 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "207: set_not_circulating_address_switch_case_0@1:",
              "210: byte \"burned\"",
              "211: frame_dig -2",
              "212: app_global_put",
              "213: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 22 -> 25 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "215: set_not_circulating_address_switch_case_1@2:",
              "218: byte \"locked\"",
              "219: frame_dig -2",
              "220: app_global_put",
              "221: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 10 -> 22 -> 26 -> 27 -> 11 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "46: __puya_arc4_router___set_not_circulating_address_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "56: txna ApplicationArgs 1",
              "57: txna ApplicationArgs 2",
              "58: extract 2 0",
              "61: callsub set_not_circulating_address"
            ],
            [
              "147: set_not_circulating_address:",
              "151: proto 2 0",
              "154: int 0",
              "155: byte \"asset_id\"",
              "156: app_global_get_ex",
              "157: assert",
              "161: txn Sender",
              "162: swap",
              "163: dup",
              "164: asset_params_get AssetManager",
              "165: assert",
              "166: uncover 2",
              "167: ==",
              "168: assert",
              "171: frame_dig -2",
              "172: len",
              "173: int 32",
              "174: ==",
              "175: assert",
              "176: frame_dig -2",
              "177: swap",
              "178: asset_holding_get AssetBalance",
              "179: bury 1",
              "180: assert",
              "183: byte \"burned\"",
              "186: byte \"locked\"",
              "189: byte \"generic\"",
              "201: frame_dig -1",
              "202: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "223: set_not_circulating_address_switch_case_2@3:",
              "226: byte \"generic\"",
              "227: frame_dig -2",
              "228: app_global_put"
            ],
            [
              "230: set_not_circulating_address_switch_case_next@5:",
              "231: retsub"
            ],
            [
              "62: int 1",
              "63: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "304: frame_dig -1",
              "305: asset_params_get AssetReserve",
              "306: assert",
              "307: frame_dig -1",
              "308: asset_holding_get AssetBalance",
              "309: bury 1",
              "310: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "319: arc62_get_circulating_supply_ternary_false@3:",
              "322: frame_dig -1",
              "323: asset_params_get AssetReserve",
              "324: assert",
              "325: frame_dig -1",
              "326: asset_holding_get AssetBalance",
              "327: assert",
              "328: frame_bury 2"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "342: frame_dig 3",
              "343: frame_dig -1",
              "344: asset_holding_get AssetBalance",
              "345: bury 1",
              "346: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_false@7:",
              "358: frame_dig 3",
              "359: frame_dig -1",
              "360: asset_holding_get AssetBalance",
              "361: assert",
              "362: frame_bury 0"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "376: frame_dig 4",
              "377: frame_dig -1",
              "378: asset_holding_get AssetBalance",
              "379: bury 1",
              "380: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_false@11:",
              "392: frame_dig 4",
              "393: frame_dig -1",
              "394: asset_holding_get AssetBalance",
              "395: assert",
              "396: frame_bury 1"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 41 -> 43 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "410: frame_dig 5",
              "411: frame_dig -1",
              "412: asset_holding_get AssetBalance",
              "413: bury 1",
              "414: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "422: arc62_get_circulating_supply_ternary_false@15:",
              "425: frame_dig 5",
              "426: frame_dig -1",
              "427: asset_holding_get AssetBalance",
              "428: assert"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 6 -> 12 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 42 -> 44 -> 13 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "20: method set_asset(uint64)void",
              "21: method set_not_circulating_address(address,string)void",
              "22: method arc62_get_circulating_supply(uint64)uint64",
              "23: txna ApplicationArgs 0",
              "24: match __puya_arc4_router___set_asset_route@2 __puya_arc4_router___set_not_circulating_address_route@3 __puya_arc4_router___arc62_get_circulating_supply_route@4"
            ],
            [
              "65: __puya_arc4_router___arc62_get_circulating_supply_route@4:",
              "68: txn OnCompletion",
              "69: !",
              "70: assert",
              "71: txn ApplicationID",
              "72: assert",
              "75: txna ApplicationArgs 1",
              "76: btoi",
              "79: callsub arc62_get_circulating_supply"
            ],
            [
              "235: arc62_get_circulating_supply:",
              "239: proto 1 1",
              "240: byte \"\"",
              "241: dupn 2",
              "244: int 0",
              "245: byte \"burned\"",
              "246: app_global_get_ex",
              "247: swap",
              "248: dup",
              "249: uncover 2",
              "250: assert",
              "251: len",
              "252: int 32",
              "253: ==",
              "254: assert",
              "257: int 0",
              "258: byte \"locked\"",
              "259: app_global_get_ex",
              "260: swap",
              "261: dup",
              "262: uncover 2",
              "263: assert",
              "264: len",
              "265: int 32",
              "266: ==",
              "267: assert",
              "270: int 0",
              "271: byte \"generic\"",
              "272: app_global_get_ex",
              "273: swap",
              "274: dup",
              "275: uncover 2",
              "276: assert",
              "277: len",
              "278: int 32",
              "279: ==",
              "280: assert",
              "284: int 0",
              "285: byte \"asset_id\"",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -1",
              "289: ==",
              "290: assert",
              "293: frame_dig -1",
              "294: asset_params_get AssetReserve",
              "295: assert",
              "296: global ZeroAddress",
              "297: ==",
              "301: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "312: arc62_get_circulating_supply_ternary_true@2:",
              "315: int 0",
              "316: frame_bury 2",
              "317: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "330: arc62_get_circulating_supply_ternary_merge@4:",
              "333: frame_dig 3",
              "334: global ZeroAddress",
              "335: ==",
              "339: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "348: arc62_get_circulating_supply_ternary_true@6:",
              "351: int 0",
              "352: frame_bury 0",
              "353: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "364: arc62_get_circulating_supply_ternary_merge@8:",
              "367: frame_dig 4",
              "368: global ZeroAddress",
              "369: ==",
              "373: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "382: arc62_get_circulating_supply_ternary_true@10:",
              "385: int 0",
              "386: frame_bury 1",
              "387: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "398: arc62_get_circulating_supply_ternary_merge@12:",
              "401: frame_dig 5",
              "402: global ZeroAddress",
              "403: ==",
              "407: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "416: arc62_get_circulating_supply_ternary_true@14:",
              "419: int 0",
              "420: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "430: arc62_get_circulating_supply_ternary_merge@16:",
              "433: frame_dig -1",
              "434: asset_params_get AssetTotal",
              "435: assert",
              "439: frame_dig 2",
              "440: -",
              "445: frame_dig 0",
              "446: -",
              "452: frame_dig 1",
              "453: -",
              "460: swap",
              "461: -",
              "470: frame_bury 0",
              "471: retsub"
            ],
            [
              "80: itob",
              "81: byte 0x151f7c75",
              "82: swap",
              "83: concat",
              "84: log",
              "85: int 1",
              "86: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 14 -> 15 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "93: txn ApplicationID",
              "94: !",
              "95: assert",
              "96: int 1",
              "97: retsub"
            ],
            [
              "10: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 5 -> 14 -> 16 -> 4",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "9: callsub __puya_arc4_router__"
            ],
            [
              "14: __puya_arc4_router__:",
              "17: proto 0 1",
              "18: txn NumAppArgs",
              "19: bz __puya_arc4_router___bare_routing@7"
            ],
            [
              "88: __puya_arc4_router___bare_routing@7:",
              "91: txn OnCompletion",
              "92: bnz __puya_arc4_router___after_if_else@11"
            ],
            [
              "99: __puya_arc4_router___after_if_else@11:",
              "102: int 0",
              "103: retsub"
            ],
            [
              "10: return"
            ]
          ]
        }
      ]
    }
  ]
}