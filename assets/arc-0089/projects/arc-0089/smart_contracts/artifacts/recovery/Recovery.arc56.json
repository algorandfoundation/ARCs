{
    "name": "Recovery",
    "structs": {},
    "methods": [
        {
            "name": "set_public_sig",
            "args": [
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "string",
                    "name": "sig"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_public_sig",
            "args": [
                {
                    "type": "address",
                    "name": "account"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_rekey_record",
            "args": [
                {
                    "type": "address",
                    "name": "wallet"
                },
                {
                    "type": "address",
                    "name": "allowed_sender"
                },
                {
                    "type": "address",
                    "name": "rekey_target"
                },
                {
                    "type": "uint64",
                    "name": "notification_window"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "rekey_wallet",
            "args": [
                {
                    "type": "address",
                    "name": "wallet"
                },
                {
                    "type": "address",
                    "name": "new_address"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cancel_rekey",
            "args": [
                {
                    "type": "address",
                    "name": "wallet"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "rekey_records": {
                    "keyType": "address",
                    "valueType": "address",
                    "prefix": "cmVjb3Jkczo="
                },
                "rekey_deadlines": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": "ZGVhZGxpbmU6"
                },
                "rekey_cancelled": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": "Y2FuY2VsbGVkOg=="
                },
                "rekey_notice_periods": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": "bm90aWNlOg=="
                },
                "db": {
                    "keyType": "address",
                    "valueType": "AVMString",
                    "prefix": "cHVic2lnOg=="
                },
                "authorized_callers": {
                    "keyType": "address",
                    "valueType": "address",
                    "prefix": "Y2FsbGVyOg=="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        125,
                        140,
                        158,
                        183,
                        213,
                        240
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        277
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        128,
                        143,
                        161,
                        186,
                        216,
                        243
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        303
                    ],
                    "errorMessage": "check self.db entry exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmBwQVH3x1CWRlYWRsaW5lOgpjYW5jZWxsZWQ6B3B1YnNpZzoIcmVjb3JkczoHbm90aWNlOgdjYWxsZXI6MRtBAMaCBgQW6kfPBEpag2UEAr7OEQTPRMPABClG7cEEPziOSDYaAI4GAHUAWgA8ACMAEQACI0MxGRREMRhENhoBiAHYIkMxGRREMRhENhoBNhoCiADZIkMxGRREMRhENhoBNhoCNhoDNhoEF4gAjyJDMRkURDEYRDYaAVcCAIgAbUkVFlcGAkxQKExQsCJDMRkURDEYRDYaAYgASEkVFlcGAkxQKExQsCJDMRkURDEYRDYaATYaAlcCAIgAGIABACNPAlQoTFCwIkMxGUD/ZjEYFEQiQ4oCASuL/lBJvEiL/78iiYoBASuL/1C+RImKAQGAB0hlbGxvLCCL/1CJigQAMQAyCRJEJwSL/FCL/r8pi/xQIxa/Kov8UCMWvycFi/xQi/8WvycGi/xQi/2/iYoCACcEi/5QvkxJTwJEi/8SRCcGi/5QvkQqi/5QSb5MF0xEFEQpi/5QSb5MF0lOAk4DRCcFi/5QvkwXTgNEMgZOAkAAfzEAiwESREyLBElOAggWTwJMvxaAICByb3VuZHMgdG8gcHJldmVudCB0aGUgb3BlcmF0aW9uUIAtc29tZW9uZSB3YW50cyB0byByZWtleSB5b3VyIHdhbGxldCwgeW91IGhhdmUgTFCxgQIyAAsyCU8CsgUjsgiyByKyELIBs4kxADIJEkRMiwMPRLEyAIsAsiAjsgiL/rIHIrIQsgGzIxa/IxaLAky/iYoBADEAMgkSRCqL/1AiFr8pi/9QIxa/iQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}